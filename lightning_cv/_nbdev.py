# AUTOGENERATED BY NBDEV! DO NOT EDIT!

__all__ = ["index", "modules", "custom_doc_links", "git_url"]

index = {"get_cfg": "00_config.ipynb",
         "set_global_cfg": "00_config.ipynb",
         "get_class_path": "00_config.ipynb",
         "default_logger": "00a_core.common.ipynb",
         "FORMAT": "00a_core.common.ipynb",
         "ROOT_NAME": "00a_core.common.ipynb",
         "ABBREV_NAME": "00a_core.common.ipynb",
         "imshow_tensor": "00a_core.common.ipynb",
         "generate_random_id": "00a_core.common.ipynb",
         "MyBackbone": "00a_core.common.ipynb",
         "Registry.__doc__": "00a_core.common.ipynb",
         "BACKBONE_REGISTRY": "00a_core.common.ipynb",
         "logger": "01b_classification.data.datasets.ipynb",
         "Urls": "00b_core.data.ipynb",
         "download_data": "00b_core.data.ipynb",
         "LOADER_REGISTERY": "00b_core.data.ipynb",
         "LOADER_REGISTERY.__doc__": "00b_core.data.ipynb",
         "pil_loader": "00b_core.data.ipynb",
         "cv2_loader": "00b_core.data.ipynb",
         "folder2df": "00b_core.data.ipynb",
         "stratify_df": "00b_core.data.ipynb",
         "Ranger": "00c_core.optim.ipynb",
         "RangerGC": "00c_core.optim.ipynb",
         "SGDP": "00c_core.optim.ipynb",
         "AdamP": "00c_core.optim.ipynb",
         "OPTIM_REGISTERY": "00c_core.optim.ipynb",
         "OPTIM_REGISTERY.__doc__": "00c_core.optim.ipynb",
         "create_optimizer": "00c_core.optim.ipynb",
         "LRMultiplier": "00d_core.schedules.ipynb",
         "FlatCos": "00d_core.schedules.ipynb",
         "WarmupParamScheduler": "00d_core.schedules.ipynb",
         "WarmupCosineLR": "00d_core.schedules.ipynb",
         "WarmupLinearLR": "00d_core.schedules.ipynb",
         "WarmupConstantLR": "00d_core.schedules.ipynb",
         "LR_SCHEDULER_REGISTERY": "00d_core.schedules.ipynb",
         "LR_SCHEDULER_REGISTERY.__doc__": "00d_core.schedules.ipynb",
         "create_scheduler": "00d_core.schedules.ipynb",
         "Identity": "00e_core.layers.ipynb",
         "AdaptiveConcatPool2d": "00e_core.layers.ipynb",
         "NormType": "00e_core.layers.ipynb",
         "BatchNorm": "00e_core.layers.ipynb",
         "LinBnDrop": "00e_core.layers.ipynb",
         "MishJitAutoFn": "00e_core.layers.ipynb",
         "mish": "00e_core.layers.ipynb",
         "Mish": "00e_core.layers.ipynb",
         "ACTIVATION_REGISTERY": "00e_core.layers.ipynb",
         "ACTIVATION_REGISTERY.__doc__": "00e_core.layers.ipynb",
         "num_features_model": "00e_core.layers.ipynb",
         "requires_grad": "00e_core.layers.ipynb",
         "init_default": "00e_core.layers.ipynb",
         "cond_init": "00e_core.layers.ipynb",
         "norm_types": "00e_core.layers.ipynb",
         "apply_leaf": "00e_core.layers.ipynb",
         "apply_init": "00e_core.layers.ipynb",
         "set_bn_eval": "00e_core.layers.ipynb",
         "bn_types": "00e_core.layers.ipynb",
         "trainable_params": "00e_core.layers.ipynb",
         "params": "00e_core.layers.ipynb",
         "ImageNetConstants": "01a_classification.data.transforms.ipynb",
         "CIFAR10Constants": "01a_classification.data.transforms.ipynb",
         "ClassificationTransformCatalog": "01a_classification.data.transforms.ipynb",
         "ClassificationTransformCatalog.__doc__": "01a_classification.data.transforms.ipynb",
         "ImageClassificationTransforms": "01a_classification.data.transforms.ipynb",
         "TorchvisionTransform": "01a_classification.data.transforms.ipynb",
         "AlbumentationsTransform": "01a_classification.data.transforms.ipynb",
         "ImagenetNoAugmentTransform": "01a_classification.data.transforms.ipynb",
         "GenericImageTransform": "01a_classification.data.transforms.ipynb",
         "AugTransforms": "01a_classification.data.transforms.ipynb",
         "TransformOutput": "01a_classification.data.transforms.ipynb",
         "create_transform": "01a_classification.data.transforms.ipynb",
         "BaseClassificationDataset": "01b_classification.data.datasets.ipynb",
         "ImageFolderDataset": "01b_classification.data.datasets.ipynb",
         "ImageCsvDataset": "01b_classification.data.datasets.ipynb",
         "ClassificationDatasetCatalog": "01b_classification.data.datasets.ipynb",
         "ClassificationDatasetCatalog.__doc__": "01b_classification.data.datasets.ipynb",
         "ClassificationDatasetOutput": "01b_classification.data.datasets.ipynb",
         "create_dataset": "01b_classification.data.datasets.ipynb",
         "has_pool_type": "01c_classification.modelling.backbones.ipynb",
         "create_body": "01c_classification.modelling.backbones.ipynb",
         "TimmCnnBody": "01c_classification.modelling.backbones.ipynb",
         "TorchvisionCnnBody": "01c_classification.modelling.backbones.ipynb",
         "CNN_BODY_REGISTRY": "01c_classification.modelling.backbones.ipynb",
         "create_cnn_body": "01c_classification.modelling.backbones.ipynb"}

modules = ["config.py",
           "core/utils/common.py",
           "core/utils/data.py",
           "core/optim.py",
           "core/schedules.py",
           "core/layers.py",
           "classification/data/transforms.py",
           "classification/data/datasets.py",
           "classification/modelling/backbone.py"]

doc_url = "https://benihime91.github.io/lightning_cv/"

git_url = "https://github.com/benihime91/lightning_cv/tree/master/"

def custom_doc_links(name): return None
