# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/01f_classification.modelPL.ipynb (unless otherwise specified).

__all__ = ['ClassificationModelPL']

# Cell
from typing import Callable, Dict, List, Optional, Union

import hydra
import matplotlib.pyplot as plt
from omegaconf import DictConfig
from fastcore.all import patch, delegates

import torch
from torch import optim

from pytorch_lightning import LightningModule, Trainer
from pytorch_lightning.utilities import rank_zero_only

from ..core.optim import create_optimizer
from ..core.schedules import create_scheduler
from .data.datasets import create_dataset
from ..core.utils.common import default_logger, show_images
from .data.transforms import create_transform
from .modelling.backbones import create_cnn_backbone
from .modelling.classifiers import create_classifier_head

# Cell
class ClassificationModelPL(LightningModule):
    def __init__(self, cfg: DictConfig, trainer: Optional[Trainer] = None):
        super().__init__()
        self._logger = default_logger
        self._cfg = cfg
        self.save_hyperparameters(self._cfg)

        self._train_dl = None
        self._validation_dl = None
        self._test_dl = None
        self._optimizer = None
        self._scheduler = None
        self._trainer = trainer

    @rank_zero_only
    def do_log(self, msg: str):
        return self._logger.info(msg)

    def setup(self):
        pass

    def setup_transforms(self):
        pass

    def setup_metrics(self):
        pass

    def create_opt(self):
        pass

    def create_schd(self):
        pass

    def configure_optimizers(self):
        pass

    def _step(self):
        pass

    def training_step(self):
        pass

    def validation_step(self):
        pass